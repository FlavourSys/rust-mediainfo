"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#6=[nil nil ((#("extern crate mediainfo;

use mediainfo::ffi::MediaInfo;

fn main() {
    let mut media_info = MediaInfo::new();

    let tracks = [\"/home/erick/japan.mp3\",
                  \"/home/erick/japan.m4a\",
                  \"/home/erick/japan.flac\",
                  \"/home/erick/guitar.mp3\"];

    for filename in tracks.iter() {
        media_info.open(filename);

        println!(\"{}\", media_info.inform(0));

        println!(\"Title: {}\", media_info.get_title());
        println!(\"Artist: {}\", media_info.get_performer());
        println!(\"Album: {}\", media_info.get_album());
        println!(\"Duration: {:?}\", media_info.get_duration_ms());
        println!(\"Track: {}\", media_info.get_track_name());
        println!(\"Track #: {:?}\", media_info.get_track_number());

        media_info.close();
    }

    println!(\"{}\", media_info.available_parameters());
}" 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t) 13 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 28 (fontified t face font-lock-keyword-face) 28 29 (fontified t) 29 38 (fontified t face font-lock-constant-face) 38 39 (fontified t) 39 40 (fontified t) 40 43 (fontified t face font-lock-constant-face) 43 45 (fontified t) 45 54 (fontified t face font-lock-type-face) 54 56 (fontified t) 56 57 (fontified t) 57 59 (fontified t face font-lock-keyword-face) 59 60 (fontified t) 60 64 (fontified t face font-lock-function-name-face) 64 69 (fontified t) 69 73 (fontified t) 73 76 (fontified t face font-lock-keyword-face) 76 77 (fontified t) 77 80 (fontified t face font-lock-keyword-face) 80 94 (fontified t) 94 103 (fontified t face font-lock-type-face) 103 105 (fontified t) 105 112 (fontified t) 112 113 (fontified t) 113 117 (fontified t) 117 120 (fontified t face font-lock-keyword-face) 120 130 (fontified t) 130 131 (fontified t) 131 132 (fontified t face font-lock-string-face) 132 153 (fontified t face font-lock-string-face) 153 154 (rear-nonsticky t fontified t face font-lock-string-face) 154 156 (fontified t) 156 174 (fontified t) 174 175 (fontified t face font-lock-string-face) 175 196 (fontified t face font-lock-string-face) 196 197 (rear-nonsticky t fontified t face font-lock-string-face) 197 199 (fontified t) 199 217 (fontified t) 217 218 (fontified t face font-lock-string-face) 218 240 (fontified t face font-lock-string-face) 240 241 (rear-nonsticky t fontified t face font-lock-string-face) 241 243 (fontified t) 243 261 (fontified t) 261 262 (fontified t face font-lock-string-face) 262 284 (fontified t face font-lock-string-face) 284 285 (fontified t face font-lock-string-face) 285 288 (fontified t) 288 289 (fontified t) 289 293 (fontified t) 293 296 (fontified t face font-lock-keyword-face) 296 306 (fontified t) 306 308 (fontified t face font-lock-keyword-face) 308 320 (fontified t) 320 321 (fontified t) 321 322 (fontified t) 322 323 (fontified t) 323 324 (fontified t) 324 325 (fontified t) 325 333 (fontified t) 333 335 (fontified t) 335 337 (fontified t) 337 349 (fontified t) 349 357 (fontified t) 357 359 (fontified t) 359 360 (fontified t) 360 361 (fontified t) 361 369 (fontified t) 369 374 (fontified t face font-lock-preprocessor-face) 374 377 (fontified t face font-lock-preprocessor-face) 377 378 (fontified t) 378 379 (fontified t face font-lock-string-face) 379 381 (fontified t face font-lock-string-face) 381 382 (fontified t face font-lock-string-face) 382 398 (fontified t) 398 400 (fontified t) 400 406 (fontified t) 406 407 (fontified t) 407 408 (fontified t) 408 416 (fontified t) 416 424 (fontified t face font-lock-preprocessor-face) 424 425 (fontified t) 425 426 (fontified t face font-lock-string-face) 426 431 (fontified t face font-lock-string-face) 431 432 (fontified t face font-lock-string-face) 432 435 (fontified t face font-lock-string-face) 435 436 (fontified t face font-lock-string-face) 436 458 (fontified t) 458 460 (fontified t) 460 461 (fontified t) 461 471 (fontified t) 471 479 (fontified t face font-lock-preprocessor-face) 479 480 (fontified t) 480 481 (fontified t face font-lock-string-face) 481 487 (fontified t face font-lock-string-face) 487 488 (fontified t face font-lock-string-face) 488 491 (fontified t face font-lock-string-face) 491 492 (fontified t face font-lock-string-face) 492 518 (fontified t) 518 520 (fontified t) 520 521 (fontified t) 521 531 (fontified t) 531 539 (fontified t face font-lock-preprocessor-face) 539 540 (fontified t) 540 541 (fontified t face font-lock-string-face) 541 546 (fontified t face font-lock-string-face) 546 547 (fontified t face font-lock-string-face) 547 550 (fontified t face font-lock-string-face) 550 551 (fontified t face font-lock-string-face) 551 573 (fontified t) 573 575 (fontified t) 575 576 (fontified t) 576 586 (fontified t) 586 594 (fontified t face font-lock-preprocessor-face) 594 595 (fontified t) 595 596 (fontified t face font-lock-string-face) 596 604 (fontified t face font-lock-string-face) 604 605 (fontified t face font-lock-string-face) 605 607 (fontified t face font-lock-string-face) 607 608 (fontified t face font-lock-string-face) 608 610 (fontified t face font-lock-string-face) 610 611 (fontified t face font-lock-string-face) 611 639 (fontified t) 639 641 (fontified t) 641 642 (fontified t) 642 652 (fontified t) 652 660 (fontified t face font-lock-preprocessor-face) 660 661 (fontified t) 661 662 (fontified t face font-lock-string-face) 662 667 (fontified t face font-lock-string-face) 667 668 (fontified t face font-lock-string-face) 668 669 (fontified t face font-lock-string-face) 669 671 (fontified t face font-lock-string-face) 671 672 (fontified t face font-lock-string-face) 672 674 (fontified t) 674 699 (fontified t) 699 700 (fontified t) 700 701 (fontified t) 701 712 (fontified t) 712 720 (fontified t face font-lock-preprocessor-face) 720 721 (fontified t) 721 722 (fontified t face font-lock-string-face) 722 727 (fontified t face font-lock-string-face) 727 729 (fontified t face font-lock-string-face) 729 730 (fontified t face font-lock-string-face) 730 731 (fontified t face font-lock-string-face) 731 732 (fontified t face font-lock-string-face) 732 733 (fontified t face font-lock-string-face) 733 735 (fontified t face font-lock-string-face) 735 736 (fontified t face font-lock-string-face) 736 738 (fontified t) 738 765 (fontified t) 765 766 (fontified t) 766 767 (fontified t) 767 770 (fontified t) 770 771 (fontified t) 771 779 (fontified t) 779 790 (fontified t) 790 795 (fontified t) 795 796 (fontified t) 796 799 (fontified t) 799 803 (fontified t) 803 805 (fontified t) 805 806 (fontified t) 806 810 (fontified t) 810 818 (fontified t face font-lock-preprocessor-face) 818 819 (fontified t) 819 820 (fontified t face font-lock-string-face) 820 822 (fontified t face font-lock-string-face) 822 823 (fontified t face font-lock-string-face) 823 825 (fontified t) 825 856 (fontified t) 856 858 (fontified t) 858 859 (fontified t) 859 860 (fontified t) 860 861 (fontified t) 861 862 (fontified t)) . 1) (undo-tree-id256 . -523) (undo-tree-id257 . -523) (undo-tree-id258 . -463) (undo-tree-id259 . -463) (undo-tree-id260 . -408) (undo-tree-id261 . -408) (undo-tree-id262 . -407) (undo-tree-id263 . -407) (undo-tree-id264 . -112) (undo-tree-id265 . -112) (undo-tree-id266 . -69) (undo-tree-id267 . -69) (undo-tree-id268 . -56) (undo-tree-id269 . -859) (undo-tree-id270 . -862) (undo-tree-id271 . -578) (undo-tree-id272 . -578) (undo-tree-id273 . -361) (undo-tree-id274 . -361) (undo-tree-id275 . -463) (undo-tree-id276 . -360) (undo-tree-id277 . -360) (undo-tree-id278 . -523) (undo-tree-id279 . -325) (undo-tree-id280 . -325) (undo-tree-id281 . -578) (undo-tree-id282 . -288) (undo-tree-id283 . -288) (undo-tree-id284 . -289) (undo-tree-id285 . -289) (undo-tree-id286 . -769) (undo-tree-id287 . -57) (undo-tree-id288 . -57) (undo-tree-id289 . -644) (undo-tree-id290 . -704) (undo-tree-id291 . -644) (undo-tree-id292 . -644) (undo-tree-id293 . -111) (undo-tree-id294 . -57) (undo-tree-id295 . -770) (undo-tree-id296 . -770) (undo-tree-id297 . -113) (undo-tree-id298 . -113) (undo-tree-id299 . -156) (undo-tree-id300 . -156) (undo-tree-id301 . -769) (undo-tree-id302 . -349) (undo-tree-id303 . -131) (undo-tree-id304 . -155) (undo-tree-id305 . -198) (undo-tree-id306 . 724) (undo-tree-id307 . -143) (undo-tree-id308 . -199) (undo-tree-id309 . -199) (undo-tree-id310 . 681) (undo-tree-id311 . -186) (undo-tree-id312 . -243) (undo-tree-id313 . -243) (undo-tree-id314 . 638) (undo-tree-id315 . -229) (undo-tree-id316 . -771) (undo-tree-id317 . -771) (undo-tree-id318 . -704) (undo-tree-id319 . -704) (undo-tree-id320 . -799) (undo-tree-id321 . -799) (undo-tree-id322 . -242) (undo-tree-id323 . -805) (undo-tree-id324 . -805) (undo-tree-id325 . -806) (undo-tree-id326 . -806) (undo-tree-id327 . -859) (undo-tree-id328 . -804) (undo-tree-id329 . -860) (undo-tree-id330 . -862) (undo-tree-id331 . -56) (undo-tree-id332 . -56) (undo-tree-id333 . -860) (undo-tree-id334 . -25) (undo-tree-id335 . -25) (undo-tree-id336 . -24) (undo-tree-id337 . -24) (undo-tree-id338 . -861) (undo-tree-id339 . -861) (undo-tree-id340 . 626) (undo-tree-id341 . -240) (t 22790 20216 76630 850000)) nil (22790 21872 354105 336000) 0 nil]) ((859 . 860) (#(")" 0 1 (fontified nil)) . -859) (859 . 860)) nil (22790 20216 25581 723000) 0 nil]) ((824 . 826)) nil (22790 20216 25590 539000) 0 nil]) ((#(")" 0 1 (fontified t)) . 824)) nil (22790 20216 25594 973000) 0 nil]) ((821 . 823) (#("{" 0 1 (fontified nil face font-lock-string-face)) . -821) (821 . 822) (820 . 822) (#("\"" 0 1 (fontified nil)) . -820) (820 . 821) (#("\"" 0 1 (fontified nil)) . -820) (820 . 821) (819 . 821) (#("(" 0 1 (fontified nil)) . -819) (818 . 820)) nil (22790 20216 25607 786000) 0 nil]) ((811 . 818)) nil (22790 20216 25615 399000) 0 nil]) ((844 . 845)) nil (22790 20216 25619 392000) 0 nil]) ((842 . 844) (#("(" 0 1 (fontified nil)) . -842) (838 . 843)) nil (22790 20216 25624 911000) 0 nil]) ((#("n" 0 1 (fontified t)) . -838) (undo-tree-id251 . -1) (#("t" 0 1 (fontified t)) . -839) (undo-tree-id252 . -1) 840) nil (22790 20216 25646 210000) 0 nil]) ((827 . 840)) nil (22790 20216 25652 310000) 0 nil]) ((821 . 827)) nil (22790 20216 25656 206000) 0 nil]) ((811 . 821) (#("media" 0 5 (fontified t)) . -811) (undo-tree-id253 . -5) 816) nil (22790 20216 25665 410000) 0 nil]) ((811 . 816) (#("medi" 0 4 (fontified t)) . -811) (undo-tree-id254 . -4) 815) nil (22790 20216 25675 954000) 0 nil]) ((811 . 815)) nil (22790 20216 25681 634000) 0 nil]) ((807 . 811) (#("    " 0 4 (fontified nil)) . 806) (undo-tree-id255 . -4) (805 . 811) (t 22790 20178 339416 245000)) nil (22790 20216 25691 657000) 0 nil]) ((#("// " 0 2 (fontified t face font-lock-comment-delimiter-face composition (6 2 #1=[9 57647])) 2 3 (fontified t face font-lock-comment-delimiter-face)) . -370) 398) nil (22790 20178 254945 482000) 0 nil]) ((370 . 373) 395 (t 22790 20126 98657 639000)) nil (22790 20178 254956 544000) 0 nil]) ((#("// " 0 2 (fontified t face font-lock-comment-delimiter-face composition (6 2 #1#)) 2 3 (fontified t face font-lock-comment-delimiter-face)) . -370) 398 (t 22790 20107 561721 769000)) nil (22790 20126 51265 724000) 0 nil]) ((370 . 373) 395 (t 22790 20092 771506 967000)) nil (22790 20107 499724 527000) 0 nil]) ((#(")" 0 1 (fontified nil)) . -322) (322 . 323) (#(")" 0 1 (fontified nil)) . -322) (322 . 323) (321 . 323) (#("(" 0 1 (fontified nil)) . -321) (321 . 322)) nil (22790 20092 720166 848000) 0 nil]) ((316 . 321) (t 22790 20081 221339 216000)) nil (22790 20092 720178 906000) 0 nil]) ((#("    " 0 4 (fontified t)) . -289) 355) nil (22790 20081 169253 670000) 0 nil]) ((347 . 355) (#("fil" 0 3 (fontified t)) . -347) (undo-tree-id242 . -3) 350) nil (22790 20081 169278 352000) 0 nil]) ((347 . 350)) nil (22790 20081 169284 684000) 0 nil]) ((694 . 702) (#("    " 0 4 (fontified t)) . 694) (undo-tree-id243 . -4) (634 . 642) (#("    " 0 4 (fontified t)) . 634) (568 . 576) (#("    " 0 4 (fontified t)) . 568) (513 . 521) (#("    " 0 4 (fontified t)) . 513) (453 . 461) (#("    " 0 4 (fontified t)) . 453) (398 . 406) (#("    " 0 4 (fontified t)) . 398) (351 . 359) (#("    " 0 4 (fontified t)) . 351) (323 . 331) (#("    " 0 4 (fontified t)) . 323) 328) nil (22790 20081 169306 353000) 0 nil]) ((#("    " 0 4 (fontified nil)) . -761) (undo-tree-id244 . -4) (765 . 766) (#("}" 0 1 (fontified nil)) . -765) (765 . 766)) nil (22790 20081 169323 48000) 0 nil]) ((757 . 765) (729 . 737) (#("    " 0 4 (fontified nil)) . 729) (752 . 753)) nil (22790 20081 169331 607000) 0 nil]) ((#("}" 0 1 (fontified t)) . -322) (undo-tree-id245 . -1) (undo-tree-id246 . 1) (undo-tree-id247 . -1) 323) nil (22790 20081 169347 189000) 0 nil]) ((#("    " 0 4 (fontified t)) . 323) (undo-tree-id248 . -4) 327) nil (22790 20081 169356 888000) 0 nil]) ((321 . 323) (#("{" 0 1 (fontified nil)) . -321) (318 . 322)) nil (22790 20081 169363 911000) 0 nil]) ((#("l" 0 1 (fontified t)) . -318) (undo-tree-id249 . -1) (#("s" 0 1 (fontified t)) . -319) (undo-tree-id250 . -1) 320) nil (22790 20081 169380 221000) 0 nil]) ((314 . 320)) nil (22790 20081 169386 212000) 0 nil]) ((298 . 314)) nil (22790 20081 169390 87000) 0 nil]) ((288 . 293)) nil (22790 20081 169394 40000) 0 nil]) ((287 . 288)) nil (22790 20081 169397 795000) 0 nil] [nil nil ((310 . 318) (297 . 305) (#("    " 0 4 (fontified nil)) . 297) (305 . 306)) ((#("
" 0 1 (fontified nil)) . 305) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . 1) (297 . 301) (#("        " 0 8 (fontified t)) . 297) (#("        " 0 8 (fontified t)) . 310) (undo-tree-id241 . -8)) (22790 20043 254624 288000) 0 nil]) ((287 . 296)) nil (22790 20043 255330 876000) 0 nil]) ((244 . 262) (#(" " 0 1 (fontified nil)) . 243) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (244 . 245)) nil (22790 20043 254665 866000) 0 nil]) ((200 . 218) (#(" " 0 1 (fontified nil)) . 199) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (200 . 201)) nil (22790 20043 254680 841000) 0 nil]) ((157 . 175) (#(" " 0 1 (fontified nil)) . 156) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (157 . 158)) nil (22790 20043 254696 910000) 0 nil]) ((231 . 232) (#("\"" 0 1 (fontified nil)) . -231) (231 . 232) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -231) (231 . 232)) nil (22790 20043 254705 921000) 0 nil]) ((209 . 231) (#("/home/erick/gui" 0 15 (fontified t face font-lock-string-face)) . -209) (undo-tree-id212 . -15) 224) nil (22790 20043 254717 127000) 0 nil]) ((221 . 224)) nil (22790 20043 254722 405000) 0 nil]) ((#("japan." 0 6 (fontified t face font-lock-string-face)) . 221) (undo-tree-id213 . -6) 227) nil (22790 20043 254730 587000) 0 nil]) ((#("mp3\"" 0 3 (fontified t face font-lock-string-face) 3 4 (rear-nonsticky t fontified t face font-lock-string-face)) . 227) (undo-tree-id214 . -4) 231) nil (22790 20043 254740 42000) 0 nil]) ((nil rear-nonsticky nil 230 . 231) (208 . 231)) nil (22790 20043 254746 93000) 0 nil]) ((206 . 208)) nil (22790 20043 254750 857000) 0 nil]) ((183 . 205) (#("/home/erick/japan.fl" 0 20 (fontified t face font-lock-string-face)) . -183) (undo-tree-id215 . -20) 203) nil (22790 20043 254762 554000) 0 nil]) ((201 . 203)) nil (22790 20043 254767 876000) 0 nil]) ((#("mp3" 0 3 (fontified t face font-lock-string-face)) . 201) (undo-tree-id216 . -3) 204) nil (22790 20043 254776 125000) 0 nil]) ((nil rear-nonsticky nil 204 . 205) (182 . 205)) nil (22790 20043 254782 329000) 0 nil]) ((180 . 182)) nil (22790 20043 254786 448000) 0 nil]) ((158 . 179) (#("/home/erick/japan.m4" 0 20 (fontified t face font-lock-string-face)) . -158) (undo-tree-id217 . -20) 178) nil (22790 20043 254795 405000) 0 nil]) ((177 . 178)) nil (22790 20043 254800 581000) 0 nil]) ((#("p" 0 1 (fontified t face font-lock-string-face)) . -177) (undo-tree-id218 . -1) (#("3" 0 1 (fontified t face font-lock-string-face)) . -178) (undo-tree-id219 . -1) 179) nil (22790 20043 254812 674000) 0 nil]) ((nil rear-nonsticky nil 179 . 180) (157 . 180)) nil (22790 20043 254819 667000) 0 nil]) ((155 . 157)) nil (22790 20043 254826 59000) 0 nil]) ((nil rear-nonsticky nil 154 . 155) (132 . 155)) nil (22790 20043 254831 20000) 0 nil]) ((#("\"/home/erick/japan.mp3\"" 0 1 (fontified t face font-lock-string-face) 1 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face)) . 154) (undo-tree-id220 . -23) (undo-tree-id221 . -23) 177) nil (22790 20043 254842 623000) 0 nil]) ((131 . 133) (#("[" 0 1 (fontified nil)) . -131) (131 . 132)) nil (22790 20043 254849 956000) 0 nil]) ((118 . 122)) nil (22790 20043 254854 787000) 0 nil]) ((118 . 127)) nil (22790 20043 254858 867000) 0 nil]) ((114 . 118) (#("    " 0 4 (fontified nil)) . 113) (113 . 117) (113 . 114)) nil (22790 20043 254865 732000) 0 nil]) ((565 . 566)) nil (22790 20043 254870 560000) 0 nil]) ((563 . 565) (#("(" 0 1 (fontified nil)) . -563) (563 . 564)) nil (22790 20043 254878 84000) 0 nil]) ((558 . 563) (#("cl" 0 2 (fontified t)) . -558) (undo-tree-id222 . -2) 560) nil (22790 20043 254888 230000) 0 nil]) ((557 . 560)) nil (22790 20043 254960 418000) 0 nil]) ((547 . 557) (#("media" 0 5 (fontified t)) . -547) (undo-tree-id223 . -5) 552) nil (22790 20043 254971 971000) 0 nil]) ((547 . 552) (#("me" 0 2 (fontified t)) . -547) (undo-tree-id224 . -2) 549) nil (22790 20043 254982 689000) 0 nil]) ((548 . 549)) nil (22790 20043 254987 861000) 0 nil]) ((#("w" 0 1 (fontified t)) . -548) (undo-tree-id225 . -1) 549) nil (22790 20043 254996 33000) 0 nil]) ((547 . 549)) nil (22790 20043 255001 228000) 0 nil]) ((543 . 547) (#("    " 0 4 (fontified nil)) . 542) (undo-tree-id226 . -4) (541 . 547)) nil (22790 20043 255012 317000) 0 nil]) ((#("


" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 541) (undo-tree-id227 . -3) (undo-tree-id228 . -3) (undo-tree-id229 . -3) (undo-tree-id230 . -3) 544) nil (22790 20043 255034 203000) 0 nil]) ((#("    // println!(\"{}\", media_info.available_parameters());" 0 4 (fontified t) 4 6 (composition (6 2 #1#) fontified t face font-lock-comment-delimiter-face) 6 7 (fontified t face font-lock-comment-delimiter-face) 7 14 (fontified t face font-lock-comment-face) 14 15 (fontified t face font-lock-comment-face) 15 16 (fontified t face font-lock-comment-face) 16 17 (fontified t face font-lock-comment-face) 17 19 (fontified t face font-lock-comment-face) 19 20 (fontified t face font-lock-comment-face) 20 22 (fontified t face font-lock-comment-face) 22 26 (fontified t face font-lock-comment-face) 26 53 (face font-lock-comment-face fontified t) 53 54 (face font-lock-comment-face fontified t) 54 55 (face font-lock-comment-face fontified t) 55 57 (face font-lock-comment-face fontified t)) . -544) (undo-tree-id231 . -51) (undo-tree-id232 . -51) (undo-tree-id233 . -57) (undo-tree-id234 . -57) 601) nil (22790 20043 255053 661000) 0 nil]) ((#("
" 0 1 (fontified t)) . -58)) nil (22790 20043 255059 424000) 0 nil]) ((#("use std::fs::File;
use std::io::Read;
" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 7 (fontified t face font-lock-constant-face) 7 9 (composition (0 2 #2=[9 57610]) fontified t) 9 11 (fontified t face font-lock-constant-face) 11 13 (composition (0 2 #2#) fontified t) 13 17 (fontified t face font-lock-type-face) 17 19 (fontified t) 19 22 (fontified t face font-lock-keyword-face) 22 23 (fontified t) 23 26 (fontified t face font-lock-constant-face) 26 28 (composition (0 2 #2#) fontified t) 28 30 (fontified t face font-lock-constant-face) 30 32 (composition (0 2 #2#) fontified t) 32 36 (fontified t face font-lock-type-face) 36 38 (fontified t)) . 58) (undo-tree-id235 . -38) (undo-tree-id236 . -38) (t 22790 19876 481697 972000)) nil (22790 20043 255070 580000) 0 nil]) ((#("    " 0 4 (fontified t)) . -152) 161) nil (22790 19876 439909 755000) 0 nil]) ((#("/" 0 1 (composition #3=(6 2 #1#) fontified t)) . -161) (undo-tree-id203 . -1) (#("/" 0 1 (composition #3# fontified t face font-lock-comment-delimiter-face)) . -162) (undo-tree-id204 . -1) 163) nil (22790 19876 439945 950000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . 163) (undo-tree-id205 . -1) 164) nil (22790 19876 439962 700000) 0 nil] [nil ([nil nil ((145 . 150)) ((#("
    " 0 5 (fontified t)) . 145) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . 5)) (22790 19872 224868 737000) 0 nil]) ((#("new();
    
    // " 0 11 (fontified t) 11 12 (fontified t) 12 16 (fontified t) 16 18 (composition (6 2 #1#) fontified t face font-lock-comment-delimiter-face) 18 19 (fontified t face font-lock-comment-delimiter-face)) . 145) (undo-tree-id167 . -6) (undo-tree-id168 . -6) (undo-tree-id169 . -12) (undo-tree-id170 . -12) (undo-tree-id171 . -19) (undo-tree-id172 . -7) (undo-tree-id173 . -7) (undo-tree-id174 . 13) 164) ((145 . 164)) (22790 19872 225292 13000) 0 nil]) ((#("let " 0 3 (fontified t face font-lock-comment-face) 3 4 (fontified t face font-lock-comment-face)) . 164) (undo-tree-id175 . -4) 168) nil (22790 19872 517572 979000) 0 nil]) ((#("r = " 0 4 (fontified t face font-lock-comment-face)) . 168) (undo-tree-id176 . -4) 172) nil (22790 19872 225043 380000) 0 nil]) ((151 . 156)) nil (22790 19872 225048 306000) 0 nil]) ((#("

" 0 2 (fontified t)) . 151) (undo-tree-id177 . -2) (undo-tree-id178 . -2) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -2) (undo-tree-id182 . -1) (undo-tree-id183 . -2) 153) nil (22790 19872 225083 992000) 0 nil]) ((#("    let mut audio_file = File::open(\"/home/erick/japan.flac\").expect(\"File not found\");

    let mut audio_data = Vec::new();
    audio_file.read_to_end(&mut audio_data).expect(\"Could not read file\");

    media_info.from_data(audio_data.as_slice()).expect(\"From data.\");
" 0 4 (fontified t) 4 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 11 (fontified t face font-lock-keyword-face) 11 25 (fontified t) 25 29 (fontified t face font-lock-type-face) 29 31 (composition (0 2 #2#) fontified t) 31 36 (fontified t) 36 37 (fontified t face font-lock-string-face) 37 59 (fontified t face font-lock-string-face) 59 60 (fontified t face font-lock-string-face) 60 69 (fontified t) 69 85 (fontified t face font-lock-string-face) 85 88 (fontified t) 88 93 (fontified t) 93 96 (fontified t face font-lock-keyword-face) 96 97 (fontified t) 97 100 (fontified t face font-lock-keyword-face) 100 114 (fontified t) 114 117 (fontified t face font-lock-type-face) 117 119 (composition (0 2 #2#) fontified t) 119 126 (fontified t) 126 130 (fontified t) 130 154 (fontified t) 154 157 (fontified t face font-lock-keyword-face) 157 177 (fontified t) 177 198 (fontified t face font-lock-string-face) 198 201 (fontified t) 201 206 (fontified t) 206 257 (fontified t) 257 269 (fontified t face font-lock-string-face) 269 272 (fontified t)) . 153) (undo-tree-id184 . -272) (undo-tree-id185 . -272) (undo-tree-id186 . -202) (undo-tree-id187 . -202) (undo-tree-id188 . -201) (undo-tree-id189 . -201) (undo-tree-id190 . -126) (undo-tree-id191 . -126) (undo-tree-id192 . -89) (undo-tree-id193 . -89) (undo-tree-id194 . -88) (undo-tree-id195 . -88) (undo-tree-id196 . -272) (undo-tree-id197 . 217) (undo-tree-id198 . -59) (undo-tree-id199 . -272) (t 22790 19718 196063 306000)) nil (22790 19872 225153 106000) 0 nil]) ((822 . 824)) nil (22790 19718 156376 400000) 0 nil]) ((816 . 817) (#("\"" 0 1 (fontified nil)) . -816) (816 . 817) (#("\"" 0 1 (fontified nil)) . -816) (816 . 817)) nil (22790 19718 156383 681000) 0 nil]) ((#("\"" 0 1 (fontified t face font-lock-string-face)) . -816) (undo-tree-id164 . -1) (#("#" 0 1 (fontified t face font-lock-string-face)) . -817) (undo-tree-id165 . -1) 818) nil (22790 19718 156400 258000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . 818) (undo-tree-id166 . -1) 819 (t 22790 19701 892492 830000)) nil (22790 19718 156407 162000) 0 nil]) ((871 . 874) 893 (t 22790 19695 669068 968000)) nil (22790 19701 817306 410000) 0 nil]) ((827 . 829) (t 22790 19682 935550 397000)) nil (22790 19695 599530 865000) 0 nil]) ((817 . 819)) nil (22790 19682 899615 492000) 0 nil]) ((850 . 856)) nil (22790 19682 899623 514000) 0 nil]) ((#("name" 0 4 (fontified t)) . 850) (undo-tree-id163 . -4) 854) nil (22790 19682 899644 391000) 0 nil]) ((#("    " 0 4 (fontified t)) . -807) 862) nil (22790 19682 899651 243000) 0 nil]) ((807 . 862)) nil (22790 19682 899655 704000) 0 nil]) ((802 . 807) (t 22790 19574 210634 807000)) nil (22790 19682 899660 578000) 0 nil]) ((#("// " 0 2 (composition (6 2 #1#) fontified t face font-lock-comment-delimiter-face) 2 3 (fontified t face font-lock-comment-delimiter-face)) . -809) 856) nil (22790 19574 164927 904000) 0 nil]) ((795 . 798)) nil (22790 19574 164936 444000) 0 nil]) ((#("e" 0 1 (fontified t)) . -795) (undo-tree-id160 . -1) (#("m" 0 1 (fontified t)) . -796) (undo-tree-id161 . -1) (#("e" 0 1 (fontified t)) . -797) (undo-tree-id162 . -1) 798) nil (22790 19574 165042 392000) 0 nil]) ((793 . 798) (t 22790 19519 913177 501000)) nil (22790 19574 165050 718000) 0 nil]) ((804 . 807) 850) nil (22790 19519 866677 446000) 0 nil]) ((796 . 797)) nil (22790 19519 866685 935000) 0 nil]) ((#(")" 0 1 (fontified nil)) . -794) (794 . 795) (#(")" 0 1 (fontified nil)) . -794) (794 . 795) (793 . 795) (#("(" 0 1 (fontified nil)) . -793) (783 . 794)) nil (22790 19519 866696 142000) 0 nil]) ((773 . 783) (#("media" 0 5 (fontified t)) . -773) (undo-tree-id158 . -5) 778) nil (22790 19519 866719 221000) 0 nil]) ((773 . 778) (#("med" 0 3 (fontified t)) . -773) (undo-tree-id159 . -3) 776) nil (22790 19519 866730 657000) 0 nil]) ((771 . 776)) nil (22790 19519 866736 46000) 0 nil]) ((768 . 770) (#("{" 0 1 (fontified nil face font-lock-string-face)) . -768) (761 . 769)) nil (22790 19519 866741 997000) 0 nil]) ((760 . 762) (#("\"" 0 1 (fontified nil)) . -760) (760 . 761) (#("\"" 0 1 (fontified nil)) . -760) (760 . 761) (759 . 761) (#("(" 0 1 (fontified nil)) . -759) (751 . 760)) nil (22790 19519 866753 396000) 0 nil]) ((746 . 751)) nil (22790 19519 866760 282000) 0 nil]) ((739 . 742) (t 22790 18530 91970 901000)) nil (22790 19519 866765 410000) 0 nil]) ((#("// " 0 2 (composition (6 2 #1#) fontified t face font-lock-comment-delimiter-face) 2 3 (fontified t face font-lock-comment-delimiter-face)) . -750) 773 (t 22790 18237 50887 845000)) nil (22790 18530 50614 359000) 0 nil]) ((711 . 712)) nil (22790 18237 7710 375000) 0 nil]) ((#("/" 0 1 (fontified t face font-lock-string-face)) . -711) (undo-tree-id145 . -1) 712) nil (22790 18237 7726 827000) 0 nil]) ((711 . 712)) nil (22790 18237 7730 555000) 0 nil]) ((#("/" 0 1 (fontified t face font-lock-string-face)) . -711) (undo-tree-id146 . -1) 712) nil (22790 18237 7736 260000) 0 nil]) ((710 . 712)) nil (22790 18237 7739 598000) 0 nil]) ((739 . 740) (#(")" 0 1 (fontified nil)) . -739) (739 . 740)) nil (22790 18237 7743 332000) 0 nil]) ((#("." 0 1 (fontified t)) . -739) (undo-tree-id147 . -1) (#("u" 0 1 (fontified t)) . -740) (undo-tree-id148 . -1) (#("n" 0 1 (fontified t)) . -741) (undo-tree-id149 . -1) (#("w" 0 1 (fontified t)) . -742) (undo-tree-id150 . -1) (#("r" 0 1 (fontified t)) . -743) (undo-tree-id151 . -1) (#("a" 0 1 (fontified t)) . -744) (undo-tree-id152 . -1) (#("p" 0 1 (fontified t)) . -745) (undo-tree-id153 . -1) 746) nil (22790 18237 7764 34000) 0 nil]) ((#("(" 0 1 (fontified nil)) . -746) (undo-tree-id154 . -1) (#(")" 0 1 (fontified t)) . 747)) nil (22790 18237 7772 755000) 0 nil]) ((#(")" 0 1 (fontified t)) . -747) (undo-tree-id155 . -1) (undo-tree-id156 . 1) (undo-tree-id157 . -1) 748 (t 22790 18214 7202 731000)) nil (22790 18237 7785 398000) 0 nil]) ((699 . 707)) nil (22790 18213 902975 213000) 0 nil]) ((#("Album" 0 5 (fontified t face font-lock-string-face)) . 699) (undo-tree-id142 . -5) 704) nil (22790 18213 902999 518000) 0 nil]) ((#(")" 0 1 (fontified nil)) . -744) (744 . 745) (#(")" 0 1 (fontified nil)) . -744) (744 . 745) (743 . 745) (#("(" 0 1 (fontified nil)) . -743) (736 . 744)) nil (22790 18213 903011 141000) 0 nil]) ((729 . 734)) nil (22790 18213 903017 496000) 0 nil]) ((727 . 729)) nil (22790 18213 903021 462000) 0 nil]) ((#("i" 0 1 (fontified t)) . -727) (undo-tree-id143 . -1) 728) nil (22790 18213 903030 539000) 0 nil]) ((726 . 728)) nil (22790 18213 903035 607000) 0 nil]) ((#("album" 0 5 (fontified t)) . 726) (undo-tree-id144 . -5) 731) nil (22790 18213 903043 940000) 0 nil]) ((685 . 735) (t 22790 18125 379175 204000)) nil (22790 18213 903050 160000) 0 nil]) ((#("    " 0 4 (fontified t)) . -685) (undo-tree-id140 . -4) (undo-tree-id141 . -4)) nil (22790 18125 328228 699000) 0 nil]) ((684 . 689) (t 22790 18000 737236 613000)) nil (22790 18125 328237 658000) 0 nil]) ((#("    " 0 4 (fontified t)) . -686) 629) nil (22790 18000 695073 68000) 0 nil]) ((623 . 629)) nil (22790 18000 695081 992000) 0 nil]) ((620 . 623)) nil (22790 18000 695086 645000) 0 nil]) ((#("title" 0 5 (fontified t)) . 620) (undo-tree-id136 . -5) 625) nil (22790 18000 695155 289000) 0 nil]) ((671 . 676)) nil (22790 18000 695161 109000) 0 nil]) ((#("title" 0 5 (fontified t)) . 671) (undo-tree-id137 . -5) 676) nil (22790 18000 695171 58000) 0 nil]) ((644 . 649)) nil (22790 18000 695176 274000) 0 nil]) ((#("Title" 0 5 (fontified t face font-lock-string-face)) . 644) (undo-tree-id138 . -5) 649) nil (22790 18000 695184 809000) 0 nil]) ((592 . 598)) nil (22790 18000 695189 998000) 0 nil]) ((#("Title" 0 5 (fontified t face font-lock-string-face)) . 592) (undo-tree-id139 . -5) 597) nil (22790 18000 695198 417000) 0 nil]) ((629 . 680)) nil (22790 18000 695203 506000) 0 nil]) ((630 . 634) (#("    " 0 4 (fontified nil)) . 629) (629 . 633) (629 . 630)) nil (22790 18000 695210 157000) 0 nil]) ((578 . 629) (t 22790 17906 855753 112000)) nil (22790 18000 695216 185000) 0 nil]) ((541 . 548)) nil (22790 17906 807293 668000) 0 nil]) ((566 . 568) (#("(" 0 1 (fontified nil)) . -566) (561 . 567)) nil (22790 17906 807303 765000) 0 nil]) ((#("with_" 0 5 (fontified t)) . 561) (undo-tree-id122 . -5) (undo-tree-id123 . -5) (undo-tree-id124 . -5) 566) nil (22790 17906 807331 969000) 0 nil]) ((#("default_" 0 8 (fontified t)) . 566) (undo-tree-id125 . -8) (undo-tree-id126 . -8) (undo-tree-id127 . -8) 574) nil (22790 17906 807348 367000) 0 nil]) ((#("options(\"" 0 8 (fontified t) 8 9 (fontified t face font-lock-string-face)) . 574) (undo-tree-id128 . -9) (undo-tree-id129 . -9) (undo-tree-id130 . -9) 583) nil (22790 17906 807375 626000) 0 nil]) ((#("Title\")" 0 5 (fontified t face font-lock-string-face) 5 6 (fontified t face font-lock-string-face) 6 7 (fontified t)) . 583) (undo-tree-id131 . -6) (undo-tree-id132 . -6) (undo-tree-id133 . -7) (undo-tree-id134 . 1) (undo-tree-id135 . -7) 590 (t 22790 17772 273582 425000)) nil (22790 17906 807398 488000) 0 nil]) ((190 . 212) (#("/home/erick/japan.fl" 0 20 (fontified t face font-lock-string-face)) . -190) (undo-tree-id113 . -18) (undo-tree-id114 . -20) 210) nil (22790 17772 236769 677000) 0 nil]) ((209 . 210)) nil (22790 17772 236779 58000) 0 nil]) ((#("a" 0 1 (fontified t face font-lock-string-face)) . -209) (undo-tree-id115 . -1) 210) nil (22790 17772 236788 770000) 0 nil]) ((208 . 210)) nil (22790 17772 236794 180000) 0 nil]) ((#("m" 0 1 (fontified t face font-lock-string-face)) . -208) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (#("4" 0 1 (fontified t face font-lock-string-face)) . -209) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -210) (undo-tree-id120 . -1) (undo-tree-id121 . -1) 211 (t 22790 17757 300003 830000)) nil (22790 17772 236823 657000) 0 nil]) ((190 . 211) (#("/home/erick/japan.m" 0 17 (fontified t face font-lock-string-face) 17 18 (fontified t composition #4=(25 2 [9 57636]) face font-lock-string-face) 18 19 (fontified t face font-lock-string-face)) . -190) (undo-tree-id107 . 2) (undo-tree-id108 . 2) (undo-tree-id109 . -17) (undo-tree-id110 . -19) 209) nil (22790 17757 264169 863000) 0 nil]) ((#("p" 0 1 (fontified t face font-lock-string-face)) . -209) (undo-tree-id111 . -1) (#("3" 0 1 (fontified t face font-lock-string-face)) . -210) (undo-tree-id112 . -1) 211 (t 22790 17737 109671 796000)) nil (22790 17757 264188 953000) 0 nil]) ((#("." 0 1 (fontified t face font-lock-string-face composition #4#)) . -207) (undo-tree-id100 . -1) 208) nil (22790 17737 73766 874000) 0 nil]) ((190 . 208) (#("/home/erick/japa" 0 16 (fontified t face font-lock-string-face)) . -190) (undo-tree-id101 . -16) (undo-tree-id102 . 10) (undo-tree-id103 . -11) 206) nil (22790 17737 73787 407000) 0 nil]) ((202 . 206)) nil (22790 17737 73794 66000) 0 nil]) ((#("guítar2" 0 7 (fontified t face font-lock-string-face)) . 202) (undo-tree-id104 . -7) (undo-tree-id105 . 7) (undo-tree-id106 . -6) 209 (t 22790 17721 19406 59000)) nil (22790 17737 73809 394000) 0 nil]) ((#("// " 0 2 (composition (6 2 #1#) fontified t face font-lock-comment-delimiter-face) 2 3 (fontified t face font-lock-comment-delimiter-face)) . -360) (#("// " 0 2 (composition (6 2 #1#) fontified t face font-lock-comment-delimiter-face) 2 3 (fontified t face font-lock-comment-delimiter-face)) . -284) (#("// " 0 2 (composition (6 2 #1#) fontified t face font-lock-comment-delimiter-face) 2 3 (fontified t face font-lock-comment-delimiter-face)) . -247) (#("// " 0 2 (composition (6 2 #1#) fontified t face font-lock-comment-delimiter-face) 2 3 (fontified t face font-lock-comment-delimiter-face)) . -157) 152) nil (22790 17720 970775 314000) 0 nil]) ((443 . 446) 492) nil (22790 17720 970786 553000) 0 nil]) ((#("
    " 0 1 (fontified t) 1 5 (fontified t)) . 492) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -5) (undo-tree-id95 . -5) (undo-tree-id96 . -5) 497) nil (22790 17720 970822 171000) 0 nil]) ((#("println!(\"open: {}\", r);" 0 8 (fontified t face font-lock-preprocessor-face) 8 9 (fontified t) 9 14 (fontified t face font-lock-string-face) 14 15 (composition (11 1 #5=[9 57708]) fontified t face font-lock-string-face) 15 19 (fontified t face font-lock-string-face) 19 23 (fontified t) 23 24 (fontified t)) . 497) (undo-tree-id97 . -24) (undo-tree-id98 . -24) (undo-tree-id99 . -24) (t 22790 17702 912439 112000)) nil (22790 17720 970839 36000) 0 nil]) ((629 . 630) (#(")" 0 1 (fontified nil)) . -629) (629 . 630) (t 22790 17656 771667 676000)) nil (22790 17702 864081 819000) 0 nil]) ((#("use mediainfo::ffi::MediaInfoStream;
use mediainfo::ffi::MediaInfoInfo;
" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 13 (fontified t face font-lock-constant-face) 13 14 (fontified t) 14 15 (fontified t) 15 18 (fontified t face font-lock-constant-face) 18 20 (fontified t) 20 35 (fontified t face font-lock-type-face) 35 37 (fontified t) 37 40 (fontified t face font-lock-keyword-face) 40 41 (fontified t) 41 50 (fontified t face font-lock-constant-face) 50 51 (fontified t) 51 52 (fontified t) 52 55 (fontified t face font-lock-constant-face) 55 57 (fontified t) 57 70 (fontified t face font-lock-type-face) 70 72 (fontified t)) . 57) (undo-tree-id87 . -72) (undo-tree-id88 . -3) (undo-tree-id89 . -41) (undo-tree-id90 . -72) (undo-tree-id91 . -72) (t 22790 17560 970034 90000)) nil (22790 17656 726355 470000) 0 nil]) ((#(")" 0 1 (fontified t)) . 700) (undo-tree-id75 . -1) (undo-tree-id76 . -1)) nil (22790 17560 927247 324000) 0 nil]) ((#("," 0 1 (fontified t)) . -700) (undo-tree-id77 . -1) 701) nil (22790 17560 927260 999000) 0 nil]) ((#("e" 0 1 (fontified t)) . 701) (#("m" 0 1 (fontified t)) . 701)) nil (22790 17560 927267 540000) 0 nil]) ((#("a" 0 1 (fontified t)) . 701) (#("N" 0 1 (fontified t face font-lock-type-face)) . 701) (#(":" 0 1 (composition (11 1 #5#) fontified t)) . 701) (#(":" 0 1 (composition (0 2 #2#) fontified t)) . 701)) nil (22790 17560 927274 773000) 0 nil]) ((#(", MediaInfoInfo" 0 2 (fontified t) 2 15 (fontified t face font-lock-type-face)) . -701)) nil (22790 17560 927280 807000) 0 nil]) ((#("::Text" 0 2 (composition (0 2 #2#) fontified t) 2 6 (fontified t face font-lock-type-face)) . -701)) nil (22790 17560 927284 940000) 0 nil]) ((#("MediaInfoInfo" 0 13 (fontified t face font-lock-type-face)) . -701)) nil (22790 17560 927289 353000) 0 nil]) ((#("
                                  " 0 1 (fontified t) 1 35 (fontified t)) . -701) (undo-tree-id78 . -1) (undo-tree-id79 . -1)) nil (22790 17560 927300 201000) 0 nil]) ((685 . 692)) nil (22790 17560 927305 520000) 0 nil]) ((#("p" 0 1 (fontified t)) . -685) (undo-tree-id80 . -1) 686) nil (22790 17560 927313 977000) 0 nil]) ((674 . 686)) nil (22790 17560 927319 121000) 0 nil]) ((672 . 674)) nil (22790 17560 927323 47000) 0 nil]) ((671 . 672)) nil (22790 17560 927326 809000) 0 nil]) ((#("_" 0 1 (fontified t)) . -671) (undo-tree-id81 . -1) 672) nil (22790 17560 927335 28000) 0 nil]) ((671 . 672)) nil (22790 17560 927339 939000) 0 nil]) ((#("_" 0 1 (fontified t)) . -671) (undo-tree-id82 . -1) 672) nil (22790 17560 927347 974000) 0 nil]) ((#("w" 0 1 (fontified t)) . -672) (undo-tree-id83 . -1) 673) nil (22790 17560 927357 386000) 0 nil]) ((671 . 673)) nil (22790 17560 927362 490000) 0 nil]) ((#("MediaInfoStream::" 0 15 (fontified t face font-lock-type-face) 15 17 (composition (0 2 #2#) fontified t)) . 672) (undo-tree-id84 . -17) 689) nil (22790 17560 927370 910000) 0 nil]) ((#("General, " 0 7 (fontified t face font-lock-type-face) 7 9 (fontified t)) . 689) (undo-tree-id85 . -9) 698) nil (22790 17560 927380 104000) 0 nil]) ((#("0, " 0 3 (fontified t)) . 698) (undo-tree-id86 . -3) 701 (t 22790 17396 317103 274000)) nil (22790 17560 927395 679000) 0 nil]) ((540 . 561) (#("/home/erick/japan.mp" 0 9 (fontified t face font-lock-string-face) 9 20 (fontified t face font-lock-string-face)) . -540) (undo-tree-id69 . -20) 560) nil (22790 17396 266973 71000) 0 nil]) ((558 . 560)) nil (22790 17396 266981 754000) 0 nil]) ((#("f" 0 1 (fontified t face font-lock-string-face)) . -558) (undo-tree-id70 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -559) (undo-tree-id71 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -560) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -561) (undo-tree-id74 . -1) 562 (t 22790 17389 680314 595000)) nil (22790 17396 267007 8000) 0 nil]) ((703 . 708)) nil (22790 17389 632102 111000) 0 nil]) ((#("Performer" 0 9 (fontified t face font-lock-string-face)) . 703) (undo-tree-id68 . -9) 712) nil (22790 17389 632126 417000) 0 nil]) ((798 . 801) 817 (t 22790 17323 222406 870000)) nil (22790 17389 632134 198000) 0 nil]) ((#("
" 0 1 (fontified t)) . 24) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) 25 (t 22790 17307 942116 266000)) nil (22790 17323 179227 11000) 0 nil]) ((#(" " 0 1 (fontified t)) . -99)) nil (22790 17307 901639 461000) 0 nil]) ((61 . 62)) nil (22790 17307 901647 693000) 0 nil]) ((#("  " 0 1 (fontified t) 1 2 (fontified t)) . 61) (undo-tree-id61 . -2) (undo-tree-id62 . -1) 63) nil (22790 17307 901671 724000) 0 nil]) ((100 . 112)) nil (22790 17307 901677 448000) 0 nil]) ((62 . 74)) nil (22790 17307 901683 304000) 0 nil]) ((#(" " 0 1 (fontified t)) . -42)) nil (22790 17307 901687 3000) 0 nil]) ((40 . 42)) nil (22790 17307 901691 9000) 0 nil]) ((31 . 40) (#("me" 0 2 (fontified t face font-lock-constant-face)) . -31) (undo-tree-id63 . -2) 33) nil (22790 17307 901700 513000) 0 nil]) ((31 . 33)) nil (22790 17307 901705 749000) 0 nil]) ((31 . 32) (t 22790 17280 381586 781000)) nil (22790 17307 901710 583000) 0 nil]) ((#("mod ffi;" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 7 (fontified t face font-lock-constant-face) 7 8 (fontified t)) . 25) (undo-tree-id59 . -8) (undo-tree-id60 . -8) (t 22790 17263 174585 921000)) nil (22790 17280 339594 191000) 0 nil]) ((#("r" 0 1 (fontified t)) . -14) (undo-tree-id54 . -1) (#("u" 0 1 (fontified t)) . -15) (undo-tree-id55 . -1) (#("s" 0 1 (fontified t)) . -16) (undo-tree-id56 . -1) (#("t" 0 1 (fontified t)) . -17) (undo-tree-id57 . -1) (#("_" 0 1 (fontified t)) . -18) (undo-tree-id58 . -1) 19 (t 22790 17248 227626 609000)) nil (22790 17263 129391 477000) 0 nil]) ((18 . 29)) nil (22790 17248 182014 369000) 0 nil]) ((#("_" 0 1 (fontified t)) . -18) (18 . 19)) nil (22790 17248 182023 861000) 0 nil]) ((14 . 18) (#("rus" 0 3 (fontified t)) . -14) (undo-tree-id52 . -3) 17) nil (22790 17248 182045 527000) 0 nil]) ((14 . 17)) nil (22790 17248 182051 384000) 0 nil]) ((9 . 14)) nil (22790 17248 182055 553000) 0 nil]) ((7 . 9)) nil (22790 17248 182059 509000) 0 nil]) ((#("e" 0 1 (fontified t)) . -7) (undo-tree-id53 . -1) 8) nil (22790 17248 182071 607000) 0 nil]) ((1 . 8)) nil (22790 17248 182076 738000) 0 nil]) ((1 . 2) (t 22790 17194 209883 89000)) nil (22790 17248 182081 743000) 0 nil]) ((799 . 800)) nil (22790 17194 157822 651000) 0 nil]) ((#(")" 0 1 (fontified nil)) . -797) (797 . 798) (#(")" 0 1 (fontified nil)) . -797) (797 . 798) (796 . 798) (#("(" 0 1 (fontified nil)) . -796) (795 . 797)) nil (22790 17194 157835 805000) 0 nil]) ((#("n" 0 1 (fontified t)) . -792) (undo-tree-id45 . -1) 793) nil (22790 17194 157858 721000) 0 nil]) ((781 . 796)) nil (22790 17194 157864 126000) 0 nil]) ((777 . 781)) nil (22790 17194 157868 52000) 0 nil]) ((776 . 777)) nil (22790 17194 157871 821000) 0 nil]) ((#("p" 0 1 (fontified t)) . -776) (undo-tree-id46 . -1) (#("a" 0 1 (fontified t)) . -777) (undo-tree-id47 . -1) 778) nil (22790 17194 157884 824000) 0 nil]) ((776 . 778)) nil (22790 17194 157890 674000) 0 nil]) ((#("a" 0 1 (fontified t)) . -776) (undo-tree-id48 . -1) 777) nil (22790 17194 157899 6000) 0 nil]) ((776 . 777)) nil (22790 17194 157904 101000) 0 nil]) ((#("a" 0 1 (fontified t)) . -776) (undo-tree-id49 . -1) 777) nil (22790 17194 157912 577000) 0 nil]) ((775 . 777)) nil (22790 17194 157917 548000) 0 nil]) ((765 . 775) (#("me" 0 2 (fontified t)) . -765) (undo-tree-id50 . -2) 767) nil (22790 17194 157926 626000) 0 nil]) ((763 . 767)) nil (22790 17194 157931 825000) 0 nil]) ((760 . 762) (#("{" 0 1 (fontified nil face font-lock-string-face)) . -760) (760 . 761)) nil (22790 17194 157937 521000) 0 nil]) ((754 . 755)) nil (22790 17194 157942 312000) 0 nil]) ((758 . 760) (#("\"" 0 1 (fontified nil)) . -758) (758 . 759) (#("\"" 0 1 (fontified nil)) . -758) (758 . 759) (757 . 759) (#("(" 0 1 (fontified nil)) . -757) (756 . 758)) nil (22790 17194 157951 964000) 0 nil]) ((754 . 756)) nil (22790 17194 157958 318000) 0 nil]) ((750 . 754)) nil (22790 17194 157962 147000) 0 nil]) ((746 . 750) (#("    " 0 4 (fontified nil)) . 745) (undo-tree-id51 . -4) (744 . 750) (t 22790 16521 497824 880000)) nil (22790 17194 157972 137000) 0 nil] [nil ([nil nil ((655 . 659)) ((#("Name" 0 4 (fontified t face font-lock-string-face)) . 655) (undo-tree-id43 . -4) (undo-tree-id44 . -4) (t 22790 16516 54427 991000)) (22790 16516 13549 792000) 0 nil]) ((#("Performer" 0 9 (fontified t face font-lock-string-face)) . 655) (undo-tree-id42 . -9) 664 (t 22790 16475 713958 226000)) ((655 . 664)) (22790 16519 867345 962000) 0 nil]) ((492 . 514) (#("/home/erick/japan.fl" 0 20 (fontified t face font-lock-string-face)) . -492) (undo-tree-id40 . -20) 512) nil (22790 16520 248250 821000) 0 nil]) ((510 . 512)) nil (22790 16475 667747 413000) 0 nil]) ((#("mp3" 0 3 (fontified t face font-lock-string-face)) . 510) (undo-tree-id41 . -3) 513 (t 22790 16446 820289 832000)) nil (22790 16475 667758 415000) 0 nil]) ((659 . 663)) nil (22790 16446 769676 970000) 0 nil]) ((#("m" 0 1 (fontified t face font-lock-string-face)) . -659) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -660) (undo-tree-id35 . -1) 661) nil (22790 16446 769708 719000) 0 nil]) ((654 . 661)) nil (22790 16446 769716 36000) 0 nil]) ((#("TrackName" 0 9 (fontified t face font-lock-string-face)) . 654) (undo-tree-id36 . 9) (undo-tree-id37 . -9) (undo-tree-id38 . -5) (undo-tree-id39 . -9) 663 (t 22790 16420 229982 587000)) nil (22790 16446 769734 531000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . 659) (undo-tree-id32 . -1) 660 (t 22790 16416 683275 22000)) nil (22790 16420 190034 64000) 0 nil]) ((660 . 661)) nil (22790 16416 629705 401000) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-string-face)) . -660) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 661 (t 22790 16411 589882 990000)) nil (22790 16416 629733 469000) 0 nil]) ((660 . 661)) nil (22790 16411 544845 315000) 0 nil]) ((#("N" 0 1 (fontified t face font-lock-string-face)) . -660) (undo-tree-id13 . -1) 661) nil (22790 16411 544857 439000) 0 nil]) ((656 . 664)) nil (22790 16411 544861 897000) 0 nil]) ((654 . 656)) nil (22790 16411 544863 667000) 0 nil]) ((#("t" 0 1 (fontified t face font-lock-string-face)) . -654) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -655) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -656) (undo-tree-id28 . -1) 657) nil (22790 16411 544885 838000) 0 nil]) ((654 . 657)) nil (22790 16411 544889 681000) 0 nil]) ((#("Performer" 0 9 (fontified t face font-lock-string-face)) . 654) (undo-tree-id29 . -9) 663 (t 22790 16362 779322 647000)) nil (22790 16411 544893 443000) 0 nil]) ((510 . 513)) nil (22790 16362 740890 919000) 0 nil]) ((#("m" 0 1 (fontified t face font-lock-string-face)) . -510) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#("4" 0 1 (fontified t face font-lock-string-face)) . -511) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -512) (undo-tree-id11 . -1) (undo-tree-id12 . -1) 513 (t 22790 16315 742119 973000)) nil (22790 16362 740936 400000) 0 nil]) ((492 . 513) (#("/home/erick/japan." 0 9 (fontified t face font-lock-string-face) 9 18 (fontified t face font-lock-string-face)) . -492) (undo-tree-id0 . -18) (undo-tree-id1 . 12) (undo-tree-id2 . -11) 510) nil (22790 16315 692983 415000) 0 nil]) ((504 . 510)) nil (22790 16315 692993 103000) 0 nil]) ((#("guítar2." 0 8 (fontified t face font-lock-string-face)) . 504) (undo-tree-id3 . -8) (undo-tree-id4 . 8) (undo-tree-id5 . -6) 512) nil (22790 16315 693010 573000) 0 nil]) ((#("mp3" 0 3 (fontified t face font-lock-string-face)) . 512) (undo-tree-id6 . -3) 515 (t 22789 64593 103426 750000)) nil (22790 16315 693021 615000) 0 nil]) nil nil (22790 16315 693025 434000) 0 nil] #6# 9667 264 nil]